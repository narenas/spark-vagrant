- name: Install common packages 
  package:
    state: present # required. Whether to install (C(present)), or remove (C(absent)) a package. Other states depend on the underlying package module, i.e C(latest).
    name: "{{ item }}"  # required. Package name, or package specifier with version, like C(name-1.0).,Be aware that packages are not always named the same and this module will not 'translate' them per distro.
  loop: "{{ packages }}" 

- name: setup avahi daemon 
  service:
      name: avahi-daemon # required. Name of the service.
      enabled: yes # not required. Whether the service should start on boot. B(At least one of state and enabled are required.)
      state: started # not required. choices: reloaded;restarted;started;stopped. C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service.  C(reloaded) will always reload. B(At least one of state and enabled are required.) Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally.

- name: setup private ssh keys for root 
  copy:
      dest: /root/.ssh/ # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
      src: files/id_rsa # not required. Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.
      group: root # not required. Name of the group that should own the file/directory, as would be fed to I(chown).
      mode: 0400 # not required. Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.  Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.  As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).  As of version 2.3, the mode may also be the special string C(preserve).  C(preserve) means that the file will be given the same permissions as the source file.
      owner: root # not required. Name of the user that should own the file/directory, as would be fed to I(chown).
  
- name: setup authorized keys in servers 
  authorized_key:
    user: root # required. The username on the remote host whose authorized_keys file will be modified
    key: "{{ item }}" # required. The SSH public key(s), as a string or (since 1.9) url (https://github.com/username.keys)
    state: present
  with_file: 
    - id_rsa.pub